# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.12.0'
          channel: 'master'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:' # optional, change this to specify the cache path
          pub-cache-key: 'flutter-pub:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache of dart pub get dependencies
          pub-cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:' # optional, change this to specify the cache path
      - run: flutter --version

      - run: echo ${{ secrets.GOOGLE_SERVICE }} | base64 --decode > android/app/google-services.json
      - run: echo ${{ secrets.RELEASE_KEY_STORE }} | base64 --decode > android/app/letsspeak.jks
      - run: echo ${{ secrets.KEY_PROPERTIES }} | base64 --decode > android/key.properties
      - run: flutter pub get

      - run: flutter clean
      - run: flutter build appbundle

      - name: Upload App Bundle
        uses: actions/upload-artifact@v3
        with:
          name: app-release.aab
          path: build/app/outputs/bundle/release/app-release.aab

      - name: Upload mapping
        uses: actions/upload-artifact@v3
        with:
          name: mapping.txt
          path: build/app/outputs/mapping/release/mapping.txt

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Zip merged_native_libs
        run: zip -qq -r merged_native_libs.zip lib
        working-directory: build/app/intermediates/merged_native_libs/release/out/

      - name: Upload merged_native_libs.zip
        uses: actions/upload-artifact@v3
        with:
          name: merged_native_libs.zip
          path: build/app/intermediates/merged_native_libs/release/out/merged_native_libs.zip

  distribution:
    name: Firebase App Distribution
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download app-release.aab
        uses: actions/download-artifact@v3
        with:
          name: app-release.aab

      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: testers
          file: app-release.aab

  release:
    name: Android Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download app-release.aab
        uses: actions/download-artifact@v3
        with:
          name: app-release.aab

      - name: Download mapping.txt
        uses: actions/download-artifact@v3
        with:
          name: mapping.txt

      - name: Download merged_native_libs.zip
        uses: actions/download-artifact@v3
        with:
          name: merged_native_libs.zip

      - uses: montudor/action-zip@v1
        with:
          args: unzip -qq merged_native_libs.zip -d merged_native_libs

      - name: Upload App bundle to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_PLAY_CONSOLE }}
          packageName: dev.quannq.letsspeak
          releaseFiles: app-release.aab
          track: production
          status: inProgress
          inAppUpdatePriority: 2
          userFraction: 0.33
          mappingFile: mapping.txt
          debugSymbols: merged_native_libs/lib
